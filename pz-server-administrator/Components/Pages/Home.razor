@page "/"
@inject IConfigurationService ConfigService
@inject ILocalizationService LocService
@implements IDisposable

<PageTitle>Project Zomboid Server Administrator</PageTitle>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="20">
    <FluentCard>
        <FluentStack Orientation="Orientation.Vertical" VerticalGap="10">
            <FluentLabel Typo="Typography.H3">
                <FluentIcon Value="@(new Icons.Regular.Size24.Home())" />
                @LocService.Get("Home.Welcome")
            </FluentLabel>
            <FluentLabel Typo="Typography.Body">
                @LocService.Get("Home.Description")
            </FluentLabel>
        </FluentStack>
    </FluentCard>

    <FluentGrid>
        <FluentGridItem xs="12" md="6">
            <FluentCard>
                <FluentStack Orientation="Orientation.Vertical" VerticalGap="10">
                    <FluentLabel Typo="Typography.H5">
                        <FluentIcon Value="@(new Icons.Regular.Size20.Server())" />
                        @LocService.Get("Home.ServerStatus")
                    </FluentLabel>
                    @if (!string.IsNullOrEmpty(ActiveServerName))
                    {
                        <FluentBadge Appearance="Appearance.Accent">
                            @LocService.Get("Home.ActiveServer", ActiveServerName)
                        </FluentBadge>
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.ServerStatusDescription")
                        </FluentLabel>
                    }
                    else
                    {
                        <FluentBadge Appearance="Appearance.Neutral">
                            @LocService.Get("Home.NoServerSelected")
                        </FluentBadge>
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.NoServerDescription")
                        </FluentLabel>
                    }
                </FluentStack>
            </FluentCard>
        </FluentGridItem>

        <FluentGridItem xs="12" md="6">
            <FluentCard>
                <FluentStack Orientation="Orientation.Vertical" VerticalGap="10">
                    <FluentLabel Typo="Typography.H5">
                        <FluentIcon Value="@(new Icons.Regular.Size20.Info())" />
                        @LocService.Get("Home.AvailableFeatures")
                    </FluentLabel>
                    <FluentStack Orientation="Orientation.Vertical" VerticalGap="5">
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.Feature.ServerConfig")
                        </FluentLabel>
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.Feature.RconConsole")
                        </FluentLabel>
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.Feature.DatabaseExplorer")
                        </FluentLabel>
                        <FluentLabel Typo="Typography.Body">
                            @LocService.Get("Home.Feature.AppConfig")
                        </FluentLabel>
                        <FluentLabel Typo="Typography.Body" Color="Color.Disabled">
                            @LocService.Get("Home.Feature.ModsComingSoon")
                        </FluentLabel>
                    </FluentStack>
                </FluentStack>
            </FluentCard>
        </FluentGridItem>
    </FluentGrid>

    <FluentCard>
        <FluentStack Orientation="Orientation.Vertical" VerticalGap="10">
            <FluentLabel Typo="Typography.H5">
                <FluentIcon Value="@(new Icons.Regular.Size20.Settings())" />
                @LocService.Get("Home.CurrentConfig")
            </FluentLabel>
            <FluentGrid>
                <FluentGridItem xs="12" md="4">
                    <FluentLabel Typo="Typography.H6">@LocService.Get("Home.ServerDirectory")</FluentLabel>
                    <FluentLabel Typo="Typography.Body">
                        @(string.IsNullOrEmpty(ServerDirectory) ? LocService.Get("Home.NotConfigured") : ServerDirectory)
                    </FluentLabel>
                </FluentGridItem>
                <FluentGridItem xs="12" md="4">
                    <FluentLabel Typo="Typography.H6">@LocService.Get("Home.RconHost")</FluentLabel>
                    <FluentLabel Typo="Typography.Body">
                        @($"{RconHost}:{RconPort}")
                    </FluentLabel>
                </FluentGridItem>
                <FluentGridItem xs="12" md="4">
                    <FluentLabel Typo="Typography.H6">@LocService.Get("Home.RegisteredUsers")</FluentLabel>
                    <FluentLabel Typo="Typography.Body">
                        @LocService.Get("Home.UsersCount", UserCount.ToString())
                    </FluentLabel>
                </FluentGridItem>
            </FluentGrid>
        </FluentStack>
    </FluentCard>
</FluentStack>

@code {
    /// <summary>
    /// Gets the name of the currently active server
    /// </summary>
    private string ActiveServerName => ConfigService.GetConfiguration().AppSettings.ActiveServer;

    /// <summary>
    /// Gets the server directory path
    /// </summary>
    private string ServerDirectory => ConfigService.GetConfiguration().AppSettings.ServerDirectoryPath;

    /// <summary>
    /// Gets the RCON host
    /// </summary>
    private string RconHost => ConfigService.GetConfiguration().AppSettings.RCON.Host;

    /// <summary>
    /// Gets the RCON port
    /// </summary>
    private int RconPort => ConfigService.GetConfiguration().AppSettings.RCON.Port;

    /// <summary>
    /// Gets the number of registered users
    /// </summary>
    private int UserCount => ConfigService.GetConfiguration().Users.Count;

    protected override void OnInitialized()
    {
        LocService.OnLanguageChanged += OnLanguageChanged;
    }

    private void OnLanguageChanged()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        LocService.OnLanguageChanged -= OnLanguageChanged;
    }
}