@inherits LayoutComponentBase
@inject IConfigurationService ConfigService
@inject ILocalizationService LocService
@using pz_server_administrator.Components.Layout

<FluentLayout>
    <FluentHeader>
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" Width="100%">
            <FluentLabel Typo="Typography.H4" Color="Color.Accent">
                @LocService.Get("MainLayout.Title")
            </FluentLabel>
            <FluentSpacer />
            @if (!string.IsNullOrEmpty(ActiveServerName))
            {
                <FluentBadge Appearance="Appearance.Accent">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Server())" />
                    @ActiveServerName
                </FluentBadge>
            }
            else
            {
                <FluentBadge Appearance="Appearance.Neutral">
                    <FluentIcon Value="@(new Icons.Regular.Size16.Warning())" />
                    @LocService.Get("MainLayout.NoServerSelected")
                </FluentBadge>
            }
            <FluentSpacer />
            <LanguageSelector />
            <UserStatusComponent />
        </FluentStack>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <a href="https://www.fluentui-blazor.net" target="_blank">@LocService.Get("MainLayout.DocsAndDemos")</a>
        <FluentSpacer />
        <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">@LocService.Get("MainLayout.AboutBlazor")</a>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui" data-nosnippet>
    @LocService.Get("MainLayout.UnhandledError")
    <a href="." class="reload">@LocService.Get("MainLayout.Reload")</a>
    <span class="dismiss">ðŸ—™</span>
</div>

@code {
    /// <summary>
    /// Gets the name of the currently active server
    /// </summary>
    private string ActiveServerName => ConfigService.GetConfiguration().AppSettings.ActiveServer;
}
